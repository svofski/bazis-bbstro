		; sensi.org/scalar bbstro
		; tv noise üêü 

		.project tvnoise.rom
		.tape v06c-rom



LOGODIM		equ $180a ; —Ä–∞–∑–º–µ—Ä 16*8=128 x 10*8 = 80
LOGOXY		equ $8454

		; –∂–∏—Ä–Ω–æ—Å—Ç—å —à—É–º–∞
		; —á–µ–º –∂–∏—Ä–Ω–µ–µ, —Ç–µ–º –º–µ–¥–ª–µ–Ω–Ω–µ–µ
		; 11 —Å–º–æ—Ç—Ä–∏—Ç—Å—è –æ–∫, 20 –ª—É—á—à–µ –≤—Å–µ–≥–æ
NOISE_FAT	equ 18

		.org 100h
		di
		xra	a
		out	10h
		mvi	a,0C3h
		sta	0
		lxi	h,Restart
		shld	1
		mvi	a,0C9h
		sta	38h
Restart:
		lxi sp, $100
		call ay_off
		lxi h, $ffff
		shld rnd16+1
		ei
		hlt		
		lxi h, clut_zero+15
		;lxi h, colors+15
		call   load_clut
		mvi a, 2
		sta state_after_1+1
		xra a
		sta stage+1
		sta nframe
		call tvnoise
		call aynoise

neverend:
		ei
		hlt

		lda nframe
		inr a
		sta nframe

		lxi h, colors+15
		call load_clut
		call rnd16
		mov a, l
		ani $fe
		sta scroll
		out 3
		call colorshuffle

stage_switch	lxi h, nframe
stage		mvi a, 0 	; stage
		ora a
		jz ne_stage0
		dcr a
		jz ne_stage1
		dcr a
		jz ne_stage2
		dcr a
		jz ne_stage3

ne_stage0	; —Ñ–∞–∑–∞ 0: —à—É–º –≤—Å–µ–ª–µ–Ω–Ω–æ–π
		mov a, m
		cpi 25
		jnz ne_endloop
		mvi a, 1
		sta stage+1
		jmp ne_endloop
ne_stage1	; —Ñ–∞–∑–∞ 1: —á–∞—Å—Ç–æ–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –º–µ—Ä—Ü–∞–Ω–∏–µ
		mov a, m
		cpi 35 		; –Ω–∞ —ç—Ç–æ–º –∫–∞–¥—Ä–µ –∫–æ–Ω–µ—Ü –§1
		jnz ne_s1_regular		
state_after_1:  mvi a, 2 	; —Å–ª–µ–¥—É—é—â–∞—è —Ñ–∞–∑–∞: 2 –∏–ª–∏ 3
		sta stage+1
ne_s1_regular	
		call ay_lo
		mov a, m
		ani 3
		jz blit_stage
		call ay_hi
		jmp ne_endloop

ne_stage2	; —Ñ–∞–∑–∞ 2: –≥—Ä—É–∑–Ω–æ–µ –º–µ—Ä—Ü–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ 
		; –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ–º
		mov a, m
		cpi 55		; –Ω–∞ —ç—Ç–æ–º –∫–∞–¥—Ä–µ –∫–æ–Ω–µ—Ü –§2
		jnz ne_s2_regular
		mvi a, 3	; —Å–ª–µ–¥—É—é—â–∞—è —Ñ–∞–∑–∞ = 3
		sta stage+1
ne_s2_regular	call ay_on
		mov a, m
		ani 7
		jz blit_stage
		call ay_off
		jmp ne_endloop

ne_stage3	; —Ñ–∞–∑–∞ 3: –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–∞—Ä–∞–Ω—Ç
		lda rnd16+2
		xra m		; –µ—Å–ª–∏ –∫–∞–¥—Ä^rnd == 0
		jnz noglitch
		mvi a, 1	; —Å–¥–µ–ª–∞–µ–º –≥–ª–∏—á
		sta stage+1	; —Ñ–∞–∑–∞ = 1 (–±—ã—Å—Ç—Ä–æ–º—ã—Ä–≥)
		mvi a, 3	; –Ω–æ –ø–æ—Å–ª–µ –Ω–µ–µ —Å—Ä–∞–∑—É –§3
		sta state_after_1+1
		mov a, m	; –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≥–ª–∏—á–∞
		ani 3		; –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –Ω–æ–º–µ—Ä–æ–º 
		adi 26		; –∫–∞–¥—Ä–∞
		mov m, a	; nframe = 26 + rnd&3
		call blit
		jmp ne_endloop	; –±–ª–∏—Ç –±–µ–∑ –≤–∞–π–ø–∞!
noglitch
		call ay_on
blit_stage
		call blit	; –ø–æ–∫–∞–∑–∞—Ç—å —Ç—Ä–∞–Ω—Å–ø–∞—Ä–∞–Ω—Ç
	;jmp $
		
	;mvi a, 15
	;out 2

		call fuzzedges	; —Ä–∞–∑–º–∞–∑–∞—Ç—å –µ–º—É –∫—Ä–∞—è
	
		;mvi a, 14
		;out 2
		
		call wipe	; —Å—Ç–µ—Ä–µ—Ç—å —Ç—Ä–∞–Ω—Å–ø–∞—Ä–∞–Ω—Ç

ne_endloop

		mvi a, 0
		out 2
;jmp $

		jmp neverend

		; swap 2 elements
		; list in hl
		; indices in b,c
swapbc:		
		push h
		mov a, b
		add l
		mov l, a
		mov a, h
		aci 0
		mov h, a
		mov d, m	; d = (hl+b)
		shld swapbc_bptr+1
		pop h
		mov a, c
		add l
		mov l, a
		mov a, h
		aci 0
		mov h, a
		mov e, m	; e = (hl+c)
		mov m, d	; (hl+c) = d
swapbc_bptr:
		lxi h, 0
		mov m, e	; (hl+b) = e
		ret


colorshuffle:
		mvi a, 4	; make this many swaps
		sta cs_ctr+1
cs_loop:
		call rnd16
		mov a, h
		ani 7
		mov b, a
		mov a, l
		ani 7
		mov c, a
		lxi h, colors+9
		call swapbc

cs_ctr:		mvi a, 15
		dcr a
		rz
		sta cs_ctr+1
		jmp cs_loop


tvnoise:
		mvi c, $ff
		call cls8000
		mvi c, 0
		call clsA000
		mvi a,NOISE_FAT
		sta counter2+1		
		
loop:
		inr c
		; —Å–∫–æ–ª—å–∫–æ-—Ç–æ –ø–∏–∫—Å–µ–ª–µ–π –≤—ã–ª–µ—Ç–∞—é—Ç –≤ —á–µ—Ä–Ω–æ–µ, –Ω–æ
		; —ç—Ç–æ –Ω–µ –∑–∞–º–µ—Ç–Ω–æ
		;mov a, c
		;ani $f
		;jnz $+4
		;inr c
		call rnd16
		call setpixel
		call rnd16
		call setpixel
		call rnd16
		call setpixel
		call rnd16
		call setpixel
counter1:
		mvi a,0
		dcr a
		sta counter1+1
		jnz loop
counter2:
		mvi a,0
		dcr a
		sta counter2+1
		jnz	loop
		ret

; –≤—ã—Ö–æ–¥:
; HL - —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 65535
rnd16:
		lxi h,65535
		dad h
		shld rnd16+1
		rnc
		mvi a,00000001b ;–ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª 80h - 10000000b
		xra l
		mov l,a
		mvi a,01101000b	;–ø–µ—Ä–µ–≤–µ—Ä–Ω—É–ª 16h - 00010110b
		xra h
		mov h,a
		shld rnd16+1
		ret

; —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∏–∫—Å–µ–ª—å C –≤ –ø–ª–æ—Å–∫–æ—Å—Ç—è—Ö $a0-e0
; –≤—Ö–æ–¥:
; H - X
; L - Y
; C - pixel
setpixel:
		mov a, l	; —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
		ral
		mov l, a

		mov d,h
		mvi a,11111000b
		ana h
		rrc
		rrc
		stc
		rar
		mov h, a
		mvi a,111b
		ana d
		mov e,a
		mvi d,PixelMask>>8
		ldax d
		mov b, a
		; colour bits
		; plane 8000 is a mask plane, skip it
		; $a0
		lxi d, $2000
sp_a0:
		dad d
		mov a, c
		ani 2
		jz sp_c0
		mov a, b
		ora m
		mov m, a
		; $c0
sp_c0:
		dad d
		mov a, c
		ani 4
		jz sp_e0
		mov a, b
		ora m
		mov m, a
		; $e0
sp_e0:	
		dad d
		mov a, c
		ani 8
		rz
		mov a, b
		ora m
		mov m, a	
		ret

cls8000
		lxi h, $8000
		mvi a, $a0
		sta cls_cond+1
cls80_1
		mov m, c
		inr l
		mov m, c
		inr l
		mov m, c
		inr l
		mov m, c
		inr l
		mov m, c
		inr l
		mov m, c
		inr l
		mov m, c
		inr l
		mov m, c
		inr l
		jnz cls80_1
		inr h
		mov a, h
cls_cond:
		cpi $a0
		jnz cls80_1
		ret

clsA000		lxi h, $a000
		xra a
		sta cls_cond+1
		jmp cls80_1		


wipe		; –∑–∞—Ç–µ—Ä–µ—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ—Å—Ç—Ä–æ—á–Ω–æ —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑
		; (—É–º–µ–Ω—å—à–∞—è L –ø–æ 2)
		; —à–∏—Ä–∏–Ω–∞ 24, –≤—ã—Å–æ—Ç–∞ 80 —á–µ—Ä–µ–∑ —Å—Ç—Ä–æ–∫—É (40)
		mvi c, $ff	; –∑–∞—Ç–∏—Ä–∞–µ–º 1 –≤ —Å–ª–æ–µ $8000
		lxi h, LOGOXY	; –ø–æ–∑–∏—Ü–∏—è —Å–Ω–∏–∑—É-—Å–ª–µ–≤–∞
		lda scroll 
		add l 		; —Å–º–µ—â–∞–µ–º –Ω–∞ —Ä—É–ª–æ–Ω
		adi 80 		; —Å–º–µ—â–∞–µ–º –Ω–∞ –≤—ã—Å–æ—Ç—É
		mov l, a
		mvi b, 40 	; —Å—á–µ—Ç—á–∏–∫ —Å—Ç—Ä–æ–∫
		mov d, h
wipe_1		;mov m, c
		;inr h
		dw $2471,$2471,$2471,$2471
		dw $2471,$2471,$2471,$2471
		dw $2471,$2471,$2471,$2471
		dw $2471,$2471,$2471,$2471
		dw $2471,$2471,$2471,$2471
		dw $2471,$2471,$2471,$2471

		dcr b
		rz
		dcr l
		dcr l
		mov h, d
		jmp wipe_1


		; –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∞–ª–∏—Ç—Ä—É
		; hl —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∞–¥—Ä–µ—Å –ø–∞–ª–∏—Ç—Ä—ã + 15
load_clut:
		mvi	a, 88h
		out	0
		mvi	c, 15
lclut1:		mov	a, c
		out	2
		mov	a, m
		out	0Ch
		dcx	h
		out	0Ch
		out	0Ch
		dcr	c
		out	0Ch
		out	0Ch
		out	0Ch
		jp	lclut1
		mvi	a,255
		out	3
		ret

		;
		; –í—ã–≤–µ—Å—Ç–∏ —Ç—Ä–∞–Ω—Å–ø–∞—Ä–∞–Ω—Ç –ø–æ—Å—Ä–µ–¥–∏ —ç–∫—Ä–∞–Ω–∞
		; –ú—ã –¥–æ–ª–∂–Ω—ã –Ω–µ–º–Ω–æ–≥–æ –æ–±–≥–æ–Ω—è—Ç—å –ª—É—á, —á—Ç–æ–±—ã
		; –∫ –Ω–∞—á–∞–ª—É —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
		; –≤–µ—Ä—Ö –∫–∞—Ä—Ç–∏–Ω–∫–∏ —É–∂–µ –±—ã–ª –≥–æ—Ç–æ–≤
blit:
		lxi h, 0
		dad sp
		shld blit_sp+1
		lxi sp, hello_jpg
		lxi h, LOGOXY + 80
		lda scroll
		add l
		mov l, a
		
                mov b, h        ; —Å–æ—Ö—Ä–∞–Ω–∏–º –≤ b –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±
		
                mvi a, 40       ; 40 —Å—Ç—Ä–æ–∫ (—á–µ—Ä–µ–∑ –æ–¥–Ω—É, –≤—Å–µ–≥–æ 80)
blit_line:
                mvi c, 192/8/8  ; —Ä–∞–∑–º–µ—Ä –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –≤ –±–∞–π—Ç–∞—Ö/8
blit_line1:
                ; {1}
                pop d           ; –±–µ—Ä–µ–º –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞ —Å—Ç—Ä–æ–∫–∏ –≤ de
                mov m, e        ; –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ —ç–∫—Ä–∞–Ω –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±
                inr h           ; —Å—Ç–æ–ª–± += 1
                mov m, d        ; –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ç–æ—Ä–æ–π —Å—Ç–æ–ª–±
                inr h           ; —Å—Ç–æ–ª–± += 1
                ; {2,3,4}
                db $d1,$73,$24,$72,$24
                db $d1,$73,$24,$72,$24
                db $d1,$73,$24,$72,$24
                dcr c
                jnz blit_line1

                dcr a           ; —É–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–∞—Ä —Å—Ç—Ä–æ–∫
                jz blit_sp      ; –∏–∑—è –≤—Å—ë
                dcr l           ; —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ (—á–µ—Ä–µ–∑ –æ–¥–Ω—É)
                dcr l
                mov h, b        ; —Å–Ω–æ–≤–∞ –ø–µ—Ä–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü
                jmp blit_line
                
blit_sp:	lxi sp, 0
		ret

ayctrl  	EQU     $15
aydata  	EQU     $14

aynoise		; h/t ivagor!
                ;mvi d,7    ; select the mixer register
		;mvi e,00110111b;enable noise for channel A 
		lxi d, $0737
                call outer ; send it to PSG
		lxi d,$080c
                ;mvi d,8    ; channel A volume
                ;mvi e,12   ; maximum  =15
                call outer ; send it to PSG
				
                ;mvi d,6
                ;mvi e,12   ; –¥–µ–ª–∏—Ç–µ–ª—å —á–∞—Å—Ç–æ—Ç—ã —à—É–º–∞
		lxi d, $060c
		;call outer
		;ret

outer   	mov a, d
                out ayctrl
                mov a, e
                out aydata
                ret
ay_off		lxi d, $0800
		jmp outer
ay_on		lxi d, $080c
		jmp outer
ay_hi		lxi d, $0602
		jmp outer
ay_lo		lxi d, $060c
		jmp outer
		
		;
		; –†–∞–∑–º—ã–≤–∞–Ω–∏–µ –∫—Ä–∞–µ–≤ —Ç—Ä–∞–Ω—Å–ø–∞—Ä–∞–Ω—Ç–∞
		; –≠—Ç–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –Ω–µ —É—Å–ø–µ–µ—Ç –≤—Å–µ —Å–¥–µ–ª–∞—Ç—å
		; –∑–∞ –æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥, –ø–æ—ç—Ç–æ–º—É —Ä–∞–∑–º—ã–≤–∫–∞ 
		; —á–µ—Ä–µ–¥—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Å—Ç—Ä–æ–∫—É –ø–æ –∫–∞–¥—Ä–∞–º
fuzzedges:      
                mvi a, 21
                sta fuzzline+1
                lxi h, hello_jpg
		lda nframe
		lxi d, 24
		ani 1 		; —á–µ—Ä–µ–¥—É–µ–º —Ä–∞–∑–º—ã–≤–∞–Ω–∏–µ
		jz fuzz_nextptr	; —á–µ—Ä–µ–∑ –∫–∞–¥—Ä, –≤—Ä–µ–º—è
fuzze1
                push h
                call rnd16
		xchg
                mvi d, 0
                mov a, e
                ani $7
                mov e, a
                
		lxi h, ElonMusk
                dad d 
                mov a, m 		; a = –ª–µ–≤–∞—è –º–∞—Å–∫–∞

                pop h
                mov m, a
		lxi d, 23
		dad d
		cma			; a = –ø—Ä–∞–≤–∞—è –º–∞—Å–∫–∞
		mov m, a
                lxi d, 48-23
fuzz_nextptr:
                dad d
fuzzline:
                mvi a, 20
                dcr a
                rz
                sta fuzzline+1
                jmp fuzze1

ElonMusk:
                db 10000000b
                db 11000000b
                db 11100000b
                db 11110000b
                db 11111000b
                db 11111100b
                db 11111110b
                db 11111111b

		; –Ω–∞—á–∞–ª—å–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞
clut_zero:	db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

		
colors:		; —Ä–∞–±–æ—á–∞—è –ø–∞–ª–∏—Ç—Ä–∞
		; –ø–ª–æ—Å–∫–æ—Å—Ç—å $8000 = 1, –≤—Å–µ —á–µ—Ä–Ω–æ–µ
		db 0,0,0,0
		db 0,0,0,0
		; —ç—Ç–∞ —á–∞—Å—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç—Å—è
		db 000q,122q,244q,244q
		db 122q,122q,377q,377q
		db 377q ; +1 to make shuffling simpler

scroll:		db 0
nframe:		db 0

		.org 400h
PixelMask:
		.db 11000000b
		.db 01100000b
		.db 00110000b
		.db 00011000b
		.db 00001100b
		.db 00000110b
		.db 00000011b
		.db 10000001b




hello_jpg:
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$3f,$f0,$00,$00,$00,$00,$00,$00,$03,$fc,$00,$00,$00
db $00,$00,$1f,$ff,$fe,$00,$00,$ff,$fe,$00,$03,$ff,$ff,$00,$07,$fc,$1f,$f0,$00,$3f,$ff,$c0,$00,$00
db $00,$00,$1f,$ff,$fe,$00,$00,$ff,$fe,$00,$07,$ff,$ff,$c0,$07,$fc,$1f,$f0,$00,$ff,$ff,$f0,$00,$00
db $00,$00,$1f,$ff,$fe,$00,$01,$ff,$ff,$00,$0f,$fc,$7f,$c0,$07,$fc,$3f,$f0,$01,$ff,$ff,$f8,$00,$00
db $00,$00,$1f,$f8,$00,$00,$01,$ff,$ff,$00,$0f,$fc,$7f,$e0,$07,$fc,$7f,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$f8,$00,$00,$01,$fe,$ff,$00,$0f,$fc,$7f,$e0,$07,$fc,$7f,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$f8,$00,$00,$01,$fe,$ff,$00,$0f,$fc,$7f,$e0,$07,$fc,$ff,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$f8,$00,$00,$03,$fe,$ff,$80,$00,$00,$7f,$e0,$07,$fc,$ff,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$ff,$ff,$00,$03,$fe,$ff,$80,$00,$0f,$ff,$80,$07,$fd,$ff,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$ff,$ff,$c0,$03,$fe,$ff,$80,$00,$0f,$fe,$00,$07,$ff,$ff,$f0,$03,$ff,$00,$00,$00,$00
db $00,$00,$1f,$ff,$ff,$e0,$07,$fc,$7f,$c0,$00,$0f,$ff,$c0,$07,$ff,$ff,$f0,$03,$ff,$00,$00,$00,$00
db $00,$00,$1f,$f8,$ff,$e0,$07,$fc,$7f,$c0,$00,$01,$ff,$c0,$07,$ff,$ff,$f0,$03,$ff,$00,$00,$00,$00
db $00,$00,$1f,$f8,$7f,$e0,$07,$fc,$7f,$c0,$00,$00,$7f,$e0,$07,$ff,$ff,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$f8,$7f,$e0,$07,$fc,$7f,$c0,$0f,$fc,$7f,$e0,$07,$ff,$df,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$f8,$7f,$e0,$0f,$ff,$ff,$e0,$0f,$fc,$7f,$e0,$07,$ff,$9f,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$f8,$7f,$e0,$0f,$ff,$ff,$e0,$0f,$fc,$7f,$e0,$07,$ff,$9f,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$f8,$7f,$e0,$0f,$ff,$ff,$e0,$0f,$fc,$7f,$e0,$07,$ff,$1f,$f0,$03,$ff,$0f,$fc,$00,$00
db $00,$00,$1f,$ff,$ff,$e0,$1f,$f8,$3f,$f0,$0f,$fc,$7f,$e0,$07,$ff,$1f,$f0,$01,$ff,$9f,$f8,$00,$00
db $00,$00,$1f,$ff,$ff,$e0,$1f,$f8,$3f,$f0,$07,$ff,$ff,$c0,$07,$fe,$1f,$f0,$01,$ff,$ff,$f8,$00,$00
db $00,$00,$1f,$ff,$ff,$c0,$1f,$f8,$3f,$f0,$03,$ff,$ff,$80,$07,$fe,$1f,$f0,$00,$ff,$ff,$e0,$00,$00
db $00,$00,$1f,$ff,$fc,$00,$1f,$f8,$3f,$f0,$00,$7f,$fc,$00,$07,$fc,$1f,$f0,$00,$1f,$ff,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$0f,$83,$e0,$e6,$0f,$83,$80,$f8,$3f,$03,$c0,$18,$1f,$03,$e0,$3e,$0e,$07,$c1,$f8,$00,$00
db $00,$00,$1d,$c3,$80,$e6,$1d,$c3,$81,$dc,$3b,$87,$70,$18,$3b,$87,$70,$36,$0e,$06,$c1,$dc,$00,$00
db $00,$00,$1c,$03,$80,$f6,$1c,$03,$81,$dc,$3b,$87,$70,$30,$38,$07,$70,$77,$0e,$0e,$e1,$dc,$00,$00
db $00,$00,$0f,$83,$e0,$fe,$0f,$83,$81,$dc,$3f,$07,$00,$30,$1f,$07,$00,$77,$0e,$0e,$e1,$f8,$00,$00
db $00,$00,$01,$c3,$80,$de,$01,$c3,$81,$dc,$3b,$87,$70,$70,$03,$87,$70,$63,$0e,$0c,$61,$dc,$00,$00
db $00,$00,$1d,$c3,$80,$ce,$1d,$c3,$9d,$dc,$3b,$87,$70,$60,$3b,$87,$70,$ff,$8e,$1f,$f1,$dc,$00,$00
db $00,$00,$0f,$83,$f0,$ce,$0f,$83,$9c,$f8,$3b,$83,$b0,$60,$1f,$03,$c0,$e3,$8f,$9c,$71,$dc,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
db $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00

